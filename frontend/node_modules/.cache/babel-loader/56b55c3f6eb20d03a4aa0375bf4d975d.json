{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\ShowApp\\\\frontend\\\\src\\\\components\\\\forms\\\\signin.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Card, Checkbox, Form, Input, Typography } from \"antd\";\nimport { EyeInvisibleOutlined, EyeTwoTone } from \"@ant-design/icons\";\nimport UserAPI from \"../../api/authapi\";\nimport { useStore } from \"../../util/store/mycontext\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./forms.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\n\nfunction Signin() {\n  _s();\n\n  const [form] = Form.useForm();\n  const [username, setUser] = useState(\"\");\n  const [password, setPass] = useState(\"\");\n  const [rememberMe, setRemember] = useState(true);\n  const userStore = useStore().userStore;\n  const history = useHistory(); // TODO if user is logged in and goes in this page, redirect to home with message already logged in\n\n  useEffect(() => {\n    const checkInfo = async () => {\n      const userObj = await AsyncStorage.getItem(\"@user\");\n      const token = await AsyncStorage.getItem(\"@token\");\n      const user = JSON.parse(userObj);\n\n      if (user !== null && token !== null && user[\"rememberMe\"] === true) {\n        userStore.setRememberState(user.user.username, token);\n        history.push(\"/\");\n      }\n    };\n\n    checkInfo();\n  }, [userStore]);\n\n  const handleLogin = () => {\n    UserAPI.login(username, password, function (response) {\n      if (response !== 400) {\n        userStore.setLoginState(response.user, response.token, rememberMe);\n        history.push(\"/\");\n      } // TODO Redirect to previous page if none exist then redirect to home.\n\n    });\n  };\n\n  const handleRedirect = () => {\n    history.push(\"/signup/\");\n  };\n\n  const handleRemember = () => {\n    setRemember(!rememberMe);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      layout: \"vertical\",\n      form: form,\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        level: 3,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Username\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Your username\",\n          value: username,\n          onChange: e => setUser(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Password\",\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {\n          placeholder: \"Your password\",\n          value: password,\n          iconRender: visible => visible ? /*#__PURE__*/_jsxDEV(EyeTwoTone, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(EyeInvisibleOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 42\n          }, this),\n          onChange: e => setPass(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: rememberMe,\n          onChange: handleRemember,\n          children: \"Remember Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"form-btn submit\",\n          onClick: handleLogin,\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"form-btn forgot-pass\",\n          ghost: true,\n          children: \"Forgot your password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"form-btn submit redirect\",\n          onClick: handleRedirect,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signin, \"/3ZolJIv1NrBR7sxSAfIjV13ZaU=\", false, function () {\n  return [Form.useForm, useStore, useHistory];\n});\n\n_c = Signin;\nexport default Signin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"sources":["D:/Github/ShowApp/frontend/src/components/forms/signin.tsx"],"names":["React","useState","Button","Card","Checkbox","Form","Input","Typography","EyeInvisibleOutlined","EyeTwoTone","UserAPI","useStore","useHistory","Title","Signin","form","useForm","username","setUser","password","setPass","rememberMe","setRemember","userStore","history","useEffect","checkInfo","userObj","AsyncStorage","getItem","token","user","JSON","parse","setRememberState","push","handleLogin","login","response","setLoginState","handleRedirect","handleRemember","e","target","value","visible"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Card, Checkbox, Form, Input, Typography } from \"antd\";\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from \"@ant-design/icons\";\r\nimport UserAPI from \"../../api/authapi\";\r\nimport { useStore } from \"../../util/store/mycontext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./forms.scss\";\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction Signin() {\r\n  const [form] = Form.useForm();\r\n  const [username, setUser] = useState(\"\");\r\n  const [password, setPass] = useState(\"\");\r\n  const [rememberMe, setRemember] = useState(true);\r\n\r\n  const userStore = useStore().userStore;\r\n  const history = useHistory();\r\n  // TODO if user is logged in and goes in this page, redirect to home with message already logged in\r\n  useEffect(() => {\r\n    const checkInfo = async () => {\r\n      const userObj = await AsyncStorage.getItem(\"@user\");\r\n      const token = await AsyncStorage.getItem(\"@token\");\r\n\r\n      const user = JSON.parse(userObj);\r\n      if (user !== null && token !== null && user[\"rememberMe\"] === true) {\r\n        userStore.setRememberState(user.user.username, token);\r\n        history.push(\"/\")\r\n      }\r\n    };\r\n\r\n    checkInfo();\r\n  }, [userStore]);\r\n  const handleLogin = () => {\r\n    UserAPI.login(username, password, function (response) {\r\n      if (response !== 400) {\r\n        userStore.setLoginState(response.user, response.token, rememberMe);\r\n        history.push(\"/\");\r\n      }\r\n      // TODO Redirect to previous page if none exist then redirect to home.\r\n    });\r\n  };\r\n\r\n  const handleRedirect = () => {\r\n    history.push(\"/signup/\");\r\n  };\r\n\r\n  const handleRemember = () => {\r\n    setRemember(!rememberMe);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"form\">\r\n      <Form layout={\"vertical\"} form={form}>\r\n        <Title level={3}>Sign In</Title>\r\n        <Form.Item label=\"Username\">\r\n          <Input\r\n            placeholder=\"Your username\"\r\n            value={username}\r\n            onChange={(e) => setUser(e.target.value)}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"Password\">\r\n          <Input.Password\r\n            placeholder=\"Your password\"\r\n            value={password}\r\n            iconRender={(visible) =>\r\n              visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\r\n            }\r\n            onChange={(e) => setPass(e.target.value)}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Checkbox checked={rememberMe} onChange={handleRemember}>\r\n            Remember Me\r\n          </Checkbox>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button className=\"form-btn submit\" onClick={handleLogin}>\r\n            Sign In\r\n          </Button>\r\n          <Button className=\"form-btn forgot-pass\" ghost>\r\n            Forgot your password?\r\n          </Button>\r\n          <Button className=\"form-btn submit redirect\" onClick={handleRedirect}>\r\n            Sign Up\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Signin;\r\n"]},"metadata":{},"sourceType":"module"}