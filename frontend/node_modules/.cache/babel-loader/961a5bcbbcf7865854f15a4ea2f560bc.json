{"ast":null,"code":"import axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nclass UserAPI {\n  static async login(username, password, callback) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const body = JSON.stringify({\n      username,\n      password\n    });\n\n    try {\n      await axios.post(\"http://127.0.0.1:8000/api/auth/logins/\", body, config).then(res => {\n        callback(res.data);\n      });\n    } catch (error) {\n      console.log(error.response);\n      callback(error.response.status);\n    }\n  }\n\n  static async register(username, email, password, callback) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const body = JSON.stringify({\n      username,\n      email,\n      password\n    });\n\n    try {\n      await axios.post(\"http://127.0.0.1:8000/api/auth/register/\", body, config).then(res => {\n        callback(res.data);\n      });\n    } catch (error) {\n      console.log(error.response);\n      callback(error.response.status);\n    }\n  }\n\n  static async logout() {\n    try {\n      try {\n        const value = await AsyncStorage.getItem(\"@token\");\n\n        if (value !== null) {\n          const config = {\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          };\n          config.headers[\"Authorizaiton\"] = 'Token ' + value;\n        }\n      } catch (e) {}\n    } catch (error) {\n      console.log(error.response.status);\n    }\n  }\n\n}\n\nUserAPI.getToken = async () => {\n  try {\n    const value = await AsyncStorage.getItem(\"@token\");\n\n    if (value !== null) {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      config.headers[\"Authorizaiton\"] = 'Token ' + value;\n      return config;\n    }\n  } catch (e) {}\n};\n\nexport default UserAPI;","map":{"version":3,"sources":["D:/Github/ShowApp/frontend/src/api/userapi.tsx"],"names":["axios","AsyncStorage","UserAPI","login","username","password","callback","config","headers","body","JSON","stringify","post","then","res","data","error","console","log","response","status","register","email","logout","value","getItem","e","getToken"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;AAEA,MAAMC,OAAN,CAAc;AAiBM,eAALC,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAqBC,QAArB,EAA+B;AAC/C,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAMA,UAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAf,CAAb;;AACA,QAAI;AACF,YAAML,KAAK,CACRY,IADG,CACE,wCADF,EAC4CH,IAD5C,EACkDF,MADlD,EAEHM,IAFG,CAEGC,GAAD,IAAS;AACbR,QAAAA,QAAQ,CAACQ,GAAG,CAACC,IAAL,CAAR;AACD,OAJG,CAAN;AAKD,KAND,CAME,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAlB;AACAb,MAAAA,QAAQ,CAACU,KAAK,CAACG,QAAN,CAAeC,MAAhB,CAAR;AACD;AACF;;AAEoB,eAARC,QAAQ,CAACjB,QAAD,EAAWkB,KAAX,EAAkBjB,QAAlB,EAA4BC,QAA5B,EAAsC;AACzD,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAMA,UAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,QAAF;AAAYkB,MAAAA,KAAZ;AAAmBjB,MAAAA;AAAnB,KAAf,CAAb;;AACA,QAAI;AACF,YAAML,KAAK,CACRY,IADG,CACE,0CADF,EAC8CH,IAD9C,EACoDF,MADpD,EAEHM,IAFG,CAEGC,GAAD,IAAS;AACbR,QAAAA,QAAQ,CAACQ,GAAG,CAACC,IAAL,CAAR;AACD,OAJG,CAAN;AAKD,KAND,CAME,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAlB;AACAb,MAAAA,QAAQ,CAACU,KAAK,CAACG,QAAN,CAAeC,MAAhB,CAAR;AACD;AACF;;AAEkB,eAANG,MAAM,GAAG;AACpB,QAAI;AACF,UAAI;AACF,cAAMC,KAAK,GAAG,MAAMvB,YAAY,CAACwB,OAAb,CAAqB,QAArB,CAApB;;AACA,YAAID,KAAK,KAAK,IAAd,EAAoB;AAClB,gBAAMjB,MAAM,GAAG;AACbC,YAAAA,OAAO,EAAE;AACP,8BAAgB;AADT;AADI,WAAf;AAMAD,UAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,IAAkC,WAAWgB,KAA7C;AACD;AACF,OAXD,CAWE,OAAOE,CAAP,EAAU,CAAE;AACf,KAbD,CAaE,OAAOV,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,CAAeC,MAA3B;AACD;AACF;;AA1EW;;AAARlB,O,CACGyB,Q,GAAW,YAAY;AAC5B,MAAI;AACF,UAAMH,KAAK,GAAG,MAAMvB,YAAY,CAACwB,OAAb,CAAqB,QAArB,CAApB;;AACA,QAAID,KAAK,KAAK,IAAd,EAAoB;AAClB,YAAMjB,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADI,OAAf;AAMAD,MAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,IAAkC,WAAWgB,KAA7C;AACA,aAAOjB,MAAP;AACD;AACF,GAZD,CAYE,OAAOmB,CAAP,EAAU,CAAE;AACf,C;;AA8DH,eAAexB,OAAf","sourcesContent":["import axios from \"axios\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nclass UserAPI {\r\n  static getToken = async () => {\r\n    try {\r\n      const value = await AsyncStorage.getItem(\"@token\");\r\n      if (value !== null) {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        };\r\n\r\n        config.headers[\"Authorizaiton\"] = 'Token ' + value;\r\n        return config;\r\n      }\r\n    } catch (e) {}\r\n  };\r\n\r\n  static async login(username, password, callback) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ username, password });\r\n    try {\r\n      await axios\r\n        .post(\"http://127.0.0.1:8000/api/auth/logins/\", body, config)\r\n        .then((res) => {\r\n          callback(res.data);\r\n        });\r\n    } catch (error) {\r\n      console.log(error.response);\r\n      callback(error.response.status);\r\n    }\r\n  }\r\n\r\n  static async register(username, email, password, callback) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ username, email, password });\r\n    try {\r\n      await axios\r\n        .post(\"http://127.0.0.1:8000/api/auth/register/\", body, config)\r\n        .then((res) => {\r\n          callback(res.data);\r\n        });\r\n    } catch (error) {\r\n      console.log(error.response);\r\n      callback(error.response.status);\r\n    }\r\n  }\r\n\r\n  static async logout() {\r\n    try {\r\n      try {\r\n        const value = await AsyncStorage.getItem(\"@token\");\r\n        if (value !== null) {\r\n          const config = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          };\r\n  \r\n          config.headers[\"Authorizaiton\"] = 'Token ' + value;\r\n        }\r\n      } catch (e) {}\r\n    } catch (error) {\r\n      console.log(error.response.status);\r\n    }\r\n  }\r\n}\r\n\r\nexport default UserAPI;\r\n"]},"metadata":{},"sourceType":"module"}