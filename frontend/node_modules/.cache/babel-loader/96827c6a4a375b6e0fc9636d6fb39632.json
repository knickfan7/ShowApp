{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\ShowApp\\\\frontend\\\\src\\\\components\\\\show\\\\overview.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Card, Col, Row, Tabs, Typography } from \"antd\";\nimport { useStore } from \"../../util/store/mycontext\";\nimport { useHistory } from \"react-router-dom\";\nimport WatchlistForm from \"../forms/watchlistform\";\nimport TMDBAPI from \"../../api/tmdbapi\";\nimport NAImg from \"../../util/imgs/na.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  TabPane\n} = Tabs;\nconst {\n  Paragraph,\n  Title\n} = Typography;\n\nfunction Overview(props) {\n  _s();\n\n  const [key, setKey] = useState(\"details\");\n\n  const handleKey = key => {\n    setKey(key);\n  };\n\n  let title = \"\";\n\n  if (props.show.type === \"movie\") {\n    title = props.show ? props.show.title + \" (\" + props.show.release_date.substring(0, 4) + \")\" : \"\";\n  } else {\n    title = props.show ? props.show.title + \" (\" + props.show.first_air.substring(0, 4) + \")\" : \"\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.show && /*#__PURE__*/_jsxDEV(Card, {\n      title: title,\n      className: \"details overview\",\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        activeKey: key,\n        onChange: handleKey,\n        children: [/*#__PURE__*/_jsxDEV(TabPane, {\n          tab: \"Details\",\n          children: [/*#__PURE__*/_jsxDEV(DetailsTab, {\n            show: props.show\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Providers, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CastCard, {\n            cast: props.show.cast,\n            setKey: setKey\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, \"details\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n          tab: \"Cast\",\n          children: /*#__PURE__*/_jsxDEV(FullCast, {\n            id: props.show.id,\n            type: props.show.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, \"cast\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n          tab: \"Recommendations\",\n          children: /*#__PURE__*/_jsxDEV(Recommendations, {\n            recommendations: props.show.recommendations,\n            type: props.show.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, \"recommendations\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Overview, \"mWw+hyH3YOTU10DDgYnbxdvzPa4=\");\n\n_c = Overview;\n\nfunction DetailsTab(props) {\n  _s2();\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [ellipsis, setEllipsis] = useState(true);\n  const [ellipsisText, setText] = useState(\"more\");\n  const userStore = useStore().userStore; // TODO only show modal if user is authenticated otherwise redirect user\n\n  const showModal = () => {\n    if (userStore.state.isAuthenticated) {\n      setModalVisible(true);\n    } else {\n      console.log(\"Todo\");\n    }\n  };\n\n  const handleEllipsis = () => {\n    if (ellipsis === false) {\n      setText(\"more\");\n    } else {\n      setText(\"less\");\n    }\n\n    setEllipsis(!ellipsis);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"details-tab\",\n    children: props.show && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          children: [props.show.img !== null && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: props.show.img,\n            alt: props.show.title,\n            className: \"overview-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), props.show.img === null && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: NAImg,\n            alt: props.show.title,\n            className: \"overview-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: showModal,\n            className: \"add-btn\",\n            children: \"Add To List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(WatchlistForm, {\n            modalVisible: modalVisible,\n            setModalVisible: setModalVisible,\n            show: props.show\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n} // TODO see if this is necessary\n\n\n_s2(DetailsTab, \"nVEg9Ow56blfVJJFnzRx8qvcSqs=\", false, function () {\n  return [useStore];\n});\n\n_c2 = DetailsTab;\n\nfunction Providers() {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"Where to watch\",\n    className: \"additional-cards\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 10\n  }, this);\n}\n\n_c3 = Providers;\n\nfunction CastCard(props) {\n  const setKey = () => {\n    props.setKey(\"cast\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"Cast & Credit\",\n    className: \"additional-cards\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: props.cast && props.cast.slice(0, 6).map(cast => /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: cast[\"img\"],\n          alt: \"n/a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cast-member-info\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              children: cast[\"name\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: cast[\"character\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      onClick: setKey,\n      children: \"View All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = CastCard;\n\nfunction FullCast(props) {\n  _s3();\n\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    TMDBAPI.get_cast(props.id, props.type, function (response) {\n      if (response.status === 200) {\n        setResults(response.data);\n      } else {\n        console.log(\"No Results!\");\n      }\n    });\n  }, [props.id, props.type]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"Cast & Credit\",\n    className: \"additional-cards tabs\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: results && results.map(cast => /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: cast[\"img\"],\n          alt: \"n/a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cast-member-info\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              children: cast[\"name\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: cast[\"character\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(FullCast, \"0Oir8sO9qj6087fqVYj2OrfQH1E=\");\n\n_c5 = FullCast;\n\nfunction Recommendations(props) {\n  _s4();\n\n  const history = useHistory();\n\n  const handleClick = (id, media_type, title) => {\n    history.push(\"/\" + media_type + \"/\" + id + \"/\" + title);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"Recommendations\",\n    className: \"additional-cards tabs\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: props.recommendations && props.recommendations.map(show => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 4,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: show[\"img\"],\n            alt: \"n/a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 20,\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: () => handleClick(show.id, props.type, show.title),\n            children: show.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: show.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n\n_s4(Recommendations, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c6 = Recommendations;\nexport default Overview;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Overview\");\n$RefreshReg$(_c2, \"DetailsTab\");\n$RefreshReg$(_c3, \"Providers\");\n$RefreshReg$(_c4, \"CastCard\");\n$RefreshReg$(_c5, \"FullCast\");\n$RefreshReg$(_c6, \"Recommendations\");","map":{"version":3,"sources":["D:/Github/ShowApp/frontend/src/components/show/overview.tsx"],"names":["React","useState","useEffect","Button","Card","Col","Row","Tabs","Typography","useStore","useHistory","WatchlistForm","TMDBAPI","NAImg","TabPane","Paragraph","Title","Overview","props","key","setKey","handleKey","title","show","type","release_date","substring","first_air","cast","id","recommendations","DetailsTab","modalVisible","setModalVisible","ellipsis","setEllipsis","ellipsisText","setText","userStore","showModal","state","isAuthenticated","console","log","handleEllipsis","img","Providers","CastCard","slice","map","FullCast","results","setResults","get_cast","response","status","data","Recommendations","history","handleClick","media_type","push","overview"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Avatar, Button, Card, Col, Row, Tabs, Typography } from \"antd\";\r\nimport { useStore } from \"../../util/store/mycontext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport WatchlistForm from \"../forms/watchlistform\";\r\nimport TMDBAPI from \"../../api/tmdbapi\";\r\nimport NAImg from \"../../util/imgs/na.png\";\r\n\r\nconst { TabPane } = Tabs;\r\nconst { Paragraph, Title } = Typography;\r\n\r\nfunction Overview(props) {\r\n  const [key, setKey] = useState(\"details\");\r\n\r\n  const handleKey = (key: string) => {\r\n    setKey(key);\r\n  };\r\n\r\n  let title = \"\";\r\n  if (props.show.type === \"movie\") {\r\n    title = props.show\r\n      ? props.show.title + \" (\" + props.show.release_date.substring(0, 4) + \")\"\r\n      : \"\";\r\n  } else {\r\n    title = props.show\r\n      ? props.show.title + \" (\" + props.show.first_air.substring(0, 4) + \")\"\r\n      : \"\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {props.show && (\r\n        <Card title={title} className=\"details overview\">\r\n          <Tabs activeKey={key} onChange={handleKey}>\r\n            <TabPane tab=\"Details\" key=\"details\">\r\n              <DetailsTab show={props.show} />\r\n              <Providers />\r\n              <CastCard cast={props.show.cast} setKey={setKey} />\r\n            </TabPane>\r\n            <TabPane tab=\"Cast\" key=\"cast\">\r\n              <FullCast id={props.show.id} type={props.show.type} />\r\n            </TabPane>\r\n            <TabPane tab=\"Recommendations\" key=\"recommendations\">\r\n              <Recommendations\r\n                recommendations={props.show.recommendations}\r\n                type={props.show.type}\r\n              />\r\n            </TabPane>\r\n          </Tabs>\r\n        </Card>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction DetailsTab(props) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [ellipsis, setEllipsis] = useState(true);\r\n  const [ellipsisText, setText] = useState(\"more\");\r\n  const userStore = useStore().userStore;\r\n\r\n  // TODO only show modal if user is authenticated otherwise redirect user\r\n  const showModal = () => {\r\n    if (userStore.state.isAuthenticated) {\r\n      setModalVisible(true);\r\n    } else {\r\n      console.log(\"Todo\");\r\n    }\r\n  };\r\n\r\n  const handleEllipsis = () => {\r\n    if (ellipsis === false) {\r\n      setText(\"more\");\r\n    } else {\r\n      setText(\"less\");\r\n    }\r\n    setEllipsis(!ellipsis);\r\n  };\r\n\r\n  return (\r\n    <div className=\"details-tab\">\r\n      {props.show && (\r\n        <>\r\n          <Row>\r\n            <Col span={8}>\r\n              {props.show.img !== null && (\r\n                <img\r\n                  src={props.show.img}\r\n                  alt={props.show.title}\r\n                  className=\"overview-img\"\r\n                />\r\n              )}\r\n\r\n              {props.show.img === null && (\r\n                <img\r\n                  src={NAImg}\r\n                  alt={props.show.title}\r\n                  className=\"overview-img\"\r\n                />\r\n              )}\r\n              <Button onClick={showModal} className=\"add-btn\">\r\n                Add To List\r\n              </Button>\r\n              <WatchlistForm\r\n                modalVisible={modalVisible}\r\n                setModalVisible={setModalVisible}\r\n                show={props.show}\r\n              />\r\n            </Col>\r\n\r\n          </Row>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// TODO see if this is necessary\r\nfunction Providers() {\r\n  return <Card title=\"Where to watch\" className=\"additional-cards\"></Card>;\r\n}\r\n\r\nfunction CastCard(props) {\r\n  const setKey = () => {\r\n    props.setKey(\"cast\");\r\n  };\r\n\r\n  return (\r\n    <Card title=\"Cast & Credit\" className=\"additional-cards\">\r\n      <Row>\r\n        {props.cast &&\r\n          props.cast.slice(0, 6).map((cast) => (\r\n            <Col span={8}>\r\n              <img src={cast[\"img\"]} alt=\"n/a\" />\r\n              <div className=\"cast-member-info\">\r\n                <span>\r\n                  <a>{cast[\"name\"]}</a>\r\n                  <p>{cast[\"character\"]}</p>\r\n                </span>\r\n              </div>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n      <hr />\r\n      <a onClick={setKey}>View All</a>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction FullCast(props) {\r\n  const [results, setResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    TMDBAPI.get_cast(props.id, props.type, function (response) {\r\n      if (response.status === 200) {\r\n        setResults(response.data);\r\n      } else {\r\n        console.log(\"No Results!\");\r\n      }\r\n    });\r\n  }, [props.id, props.type]);\r\n\r\n  return (\r\n    <Card title=\"Cast & Credit\" className=\"additional-cards tabs\">\r\n      <Row>\r\n        {results &&\r\n          results.map((cast) => (\r\n            <Col span={12}>\r\n              <img src={cast[\"img\"]} alt=\"n/a\" />\r\n              <div className=\"cast-member-info\">\r\n                <span>\r\n                  <a>{cast[\"name\"]}</a>\r\n                  <p>{cast[\"character\"]}</p>\r\n                </span>\r\n              </div>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction Recommendations(props) {\r\n  const history = useHistory();\r\n\r\n  const handleClick = (id, media_type, title) => {\r\n    history.push(\"/\" + media_type + \"/\" + id + \"/\" + title);\r\n  };\r\n\r\n  return (\r\n    <Card title=\"Recommendations\" className=\"additional-cards tabs\">\r\n      <Row>\r\n        {props.recommendations &&\r\n          props.recommendations.map((show) => (\r\n            <>\r\n              <Col span={4}>\r\n                <img src={show[\"img\"]} alt=\"n/a\" />\r\n              </Col>\r\n              <Col span={20}>\r\n                <a onClick={() => handleClick(show.id, props.type, show.title)}>\r\n                  {show.title}\r\n                </a>\r\n                <p>{show.overview}</p>\r\n              </Col>\r\n            </>\r\n          ))}\r\n      </Row>\r\n    </Card>\r\n  );\r\n}\r\nexport default Overview;\r\n"]},"metadata":{},"sourceType":"module"}