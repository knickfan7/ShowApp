{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\ShowApp\\\\frontend\\\\src\\\\components\\\\show\\\\show.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { MovieDetails, ShowDetails, Statistics, Trailer } from \"./details\";\nimport { Col, Row } from \"antd\";\nimport Overview from \"./overview\";\nimport TMDBAPI from \"../../api/tmdbapi\";\nimport \"./show.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Show(props) {\n  _s();\n\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    TMDBAPI.info(props.id, props.type, function (response) {\n      if (response.status === 200) {\n        setResults(response.data);\n      } else {\n        console.log(\"No Results!\");\n      }\n    });\n  }, [props.id, props.type]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"show-container\",\n    children: results[0] && /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        children: [props.type === \"movie\" && /*#__PURE__*/_jsxDEV(MovieDetails, {\n          show: results[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 40\n        }, this), props.type === \"tv\" && /*#__PURE__*/_jsxDEV(ShowDetails, {\n          show: results[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n          show: results[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Trailer, {\n          show: results[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 14,\n        children: /*#__PURE__*/_jsxDEV(Overview, {\n          show: results[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Show, \"0Oir8sO9qj6087fqVYj2OrfQH1E=\");\n\n_c = Show;\nexport default Show;\n\nvar _c;\n\n$RefreshReg$(_c, \"Show\");","map":{"version":3,"sources":["D:/Github/ShowApp/frontend/src/components/show/show.tsx"],"names":["React","useEffect","useState","MovieDetails","ShowDetails","Statistics","Trailer","Col","Row","Overview","TMDBAPI","Show","props","results","setResults","info","id","type","response","status","data","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,UAApC,EAAgDC,OAAhD,QAA+D,WAA/D;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAO,aAAP;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACK,IAAR,CAAaH,KAAK,CAACI,EAAnB,EAAuBJ,KAAK,CAACK,IAA7B,EAAmC,UAAUC,QAAV,EAAoB;AACrD,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BL,QAAAA,UAAU,CAACI,QAAQ,CAACE,IAAV,CAAV;AACD,OAFD,MAEO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD;AACF,KAND;AAOD,GARQ,EAQN,CAACV,KAAK,CAACI,EAAP,EAAWJ,KAAK,CAACK,IAAjB,CARM,CAAT;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cACGJ,OAAO,CAAC,CAAD,CAAP,iBACC,QAAC,GAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA,mBACGD,KAAK,CAACK,IAAN,KAAe,OAAf,iBAA0B,QAAC,YAAD;AAAc,UAAA,IAAI,EAAEJ,OAAO,CAAC,CAAD;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAD7B,EAEGD,KAAK,CAACK,IAAN,KAAe,IAAf,iBAAuB,QAAC,WAAD;AAAa,UAAA,IAAI,EAAEJ,OAAO,CAAC,CAAD;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAF1B,eAGE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAEA,OAAO,CAAC,CAAD;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,OAAD;AAAS,UAAA,IAAI,EAAEA,OAAO,CAAC,CAAD;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEA,OAAO,CAAC,CAAD;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA9BQF,I;;KAAAA,I;AAgCT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { MovieDetails, ShowDetails, Statistics, Trailer } from \"./details\";\r\nimport { Col, Row } from \"antd\";\r\nimport Overview from \"./overview\";\r\n\r\nimport TMDBAPI from \"../../api/tmdbapi\";\r\nimport \"./show.scss\";\r\n\r\nfunction Show(props) {\r\n  const [results, setResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    TMDBAPI.info(props.id, props.type, function (response) {\r\n      if (response.status === 200) {\r\n        setResults(response.data);\r\n      } else {\r\n        console.log(\"No Results!\");\r\n      }\r\n    });\r\n  }, [props.id, props.type]);\r\n\r\n  return (\r\n    <div className=\"show-container\">\r\n      {results[0] && (\r\n        <Row>\r\n          <Col span={6}>\r\n            {props.type === \"movie\" && <MovieDetails show={results[0]} />}\r\n            {props.type === \"tv\" && <ShowDetails show={results[0]} />}\r\n            <Statistics show={results[0]} />\r\n            <Trailer show={results[0]} />\r\n          </Col>\r\n          <Col span={14}>\r\n            <Overview show={results[0]} />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Show;\r\n"]},"metadata":{},"sourceType":"module"}