{"ast":null,"code":"import AsyncStorage from '@react-native-async-storage/async-storage';\nexport function createUserStore() {\n  const storeData = async value => {\n    try {\n      await AsyncStorage.setItem('@token', value);\n    } catch (e) {// saving error\n    }\n  };\n\n  const getData = async () => {\n    try {\n      const value = await AsyncStorage.getItem('@storage_Key');\n\n      if (value !== null) {}\n    } catch (e) {}\n  };\n\n  return {\n    state: {\n      isLoading: false,\n      isAuthenticated: false,\n      user: null,\n      token: localStorage.getItem(\"token\")\n    },\n\n    setState(state) {\n      this.state = state;\n    },\n\n    logoutState: {\n      isLoading: false,\n      isAuthenticated: false,\n      user: null,\n      token: null\n    },\n    //      localStorage.removeItem(\"token\");\n    loginFail: {\n      isAuthenticated: false,\n      user: null,\n      token: null\n    },\n    loginSuccess: {\n      isLoading: false,\n      isAuthenticated: false,\n      user: null,\n      token: localStorage.getItem(\"token\")\n    },\n\n    setLoginState(user, token) {\n      localStorage.setItem(\"token\", token);\n      let loginState = {\n        isLoading: false,\n        isAuthenticated: true,\n        user: user,\n        token: token\n      };\n      this.state = loginState;\n    }\n\n  };\n}","map":{"version":3,"sources":["D:/Github/ShowApp/frontend/src/util/store/userstore.tsx"],"names":["AsyncStorage","createUserStore","storeData","value","setItem","e","getData","getItem","state","isLoading","isAuthenticated","user","token","localStorage","setState","logoutState","loginFail","loginSuccess","setLoginState","loginState"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AAEA,OAAO,SAASC,eAAT,GAA2B;AAChC,QAAMC,SAAS,GAAG,MAAOC,KAAP,IAAiB;AACjC,QAAI;AACF,YAAMH,YAAY,CAACI,OAAb,CAAqB,QAArB,EAA+BD,KAA/B,CAAN;AACD,KAFD,CAEE,OAAOE,CAAP,EAAU,CACV;AACD;AACF,GAND;;AAQA,QAAMC,OAAO,GAAG,YAAY;AAC1B,QAAI;AACF,YAAMH,KAAK,GAAG,MAAMH,YAAY,CAACO,OAAb,CAAqB,cAArB,CAApB;;AACA,UAAGJ,KAAK,KAAK,IAAb,EAAmB,CAClB;AACF,KAJD,CAIE,OAAME,CAAN,EAAS,CACV;AACF,GAPD;;AASA,SAAO;AACLG,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE,KADN;AAELC,MAAAA,eAAe,EAAE,KAFZ;AAGLC,MAAAA,IAAI,EAAE,IAHD;AAILC,MAAAA,KAAK,EAAEC,YAAY,CAACN,OAAb,CAAqB,OAArB;AAJF,KADF;;AAQLO,IAAAA,QAAQ,CAACN,KAAD,EAAgB;AACtB,WAAKA,KAAL,GAAaA,KAAb;AACD,KAVI;;AAYLO,IAAAA,WAAW,EAAE;AACXN,MAAAA,SAAS,EAAE,KADA;AAEXC,MAAAA,eAAe,EAAE,KAFN;AAGXC,MAAAA,IAAI,EAAE,IAHK;AAIXC,MAAAA,KAAK,EAAE;AAJI,KAZR;AAkBL;AAEAI,IAAAA,SAAS,EAAE;AACTN,MAAAA,eAAe,EAAE,KADR;AAETC,MAAAA,IAAI,EAAE,IAFG;AAGTC,MAAAA,KAAK,EAAE;AAHE,KApBN;AA0BLK,IAAAA,YAAY,EAAE;AACZR,MAAAA,SAAS,EAAE,KADC;AAEZC,MAAAA,eAAe,EAAE,KAFL;AAGZC,MAAAA,IAAI,EAAE,IAHM;AAIZC,MAAAA,KAAK,EAAEC,YAAY,CAACN,OAAb,CAAqB,OAArB;AAJK,KA1BT;;AAiCLW,IAAAA,aAAa,CAACP,IAAD,EAAOC,KAAP,EAAc;AAC3BC,MAAAA,YAAY,CAACT,OAAb,CAAqB,OAArB,EAA8BQ,KAA9B;AAEE,UAAIO,UAAU,GAAG;AACfV,QAAAA,SAAS,EAAE,KADI;AAEfC,QAAAA,eAAe,EAAE,IAFF;AAGfC,QAAAA,IAAI,EAAEA,IAHS;AAIfC,QAAAA,KAAK,EAAEA;AAJQ,OAAjB;AAMA,WAAKJ,KAAL,GAAaW,UAAb;AACD;;AA3CI,GAAP;AA6CD","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport function createUserStore() {\r\n  const storeData = async (value) => {\r\n    try {\r\n      await AsyncStorage.setItem('@token', value)\r\n    } catch (e) {\r\n      // saving error\r\n    }\r\n  }\r\n\r\n  const getData = async () => {\r\n    try {\r\n      const value = await AsyncStorage.getItem('@storage_Key')\r\n      if(value !== null) {\r\n      }\r\n    } catch(e) {\r\n    }\r\n  }\r\n\r\n  return {\r\n    state: {\r\n      isLoading: false,\r\n      isAuthenticated: false,\r\n      user: null,\r\n      token: localStorage.getItem(\"token\"),\r\n    },\r\n\r\n    setState(state: Object) {\r\n      this.state = state;\r\n    },\r\n\r\n    logoutState: {\r\n      isLoading: false,\r\n      isAuthenticated: false,\r\n      user: null,\r\n      token: null,\r\n    },\r\n    //      localStorage.removeItem(\"token\");\r\n\r\n    loginFail: {\r\n      isAuthenticated: false,\r\n      user: null,\r\n      token: null,\r\n    },\r\n\r\n    loginSuccess: {\r\n      isLoading: false,\r\n      isAuthenticated: false,\r\n      user: null,\r\n      token: localStorage.getItem(\"token\"),\r\n    },\r\n\r\n    setLoginState(user, token) {\r\n    localStorage.setItem(\"token\", token);\r\n\r\n      let loginState = {\r\n        isLoading: false,\r\n        isAuthenticated: true,\r\n        user: user,\r\n        token: token,\r\n      };\r\n      this.state = loginState;\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}