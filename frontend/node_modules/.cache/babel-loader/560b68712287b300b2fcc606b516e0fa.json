{"ast":null,"code":"import axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nclass UserAPI {\n  static async login(username, password, callback) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const body = JSON.stringify({\n      username,\n      password\n    });\n\n    try {\n      await axios.post(\"http://127.0.0.1:8000/api/auth/logins/\", body, config).then(res => {\n        callback(res.data);\n      });\n    } catch (error) {\n      callback(error.response.status);\n    }\n  }\n\n  static async register(username, email, password, callback) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const body = JSON.stringify({\n      username,\n      email,\n      password\n    });\n\n    try {\n      await axios.post(\"http://127.0.0.1:8000/api/auth/register/\", body, config).then(res => {\n        callback(res.data);\n      });\n    } catch (error) {\n      callback(error.response.status);\n    }\n  }\n\n  static async logout() {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const value = await AsyncStorage.getItem(\"@token\");\n\n      if (value !== null) {\n        config.headers[\"Authorization\"] = \"Token \" + value;\n      }\n    } catch (e) {}\n\n    try {\n      await axios.post(\"http://127.0.0.1:8000/api/auth/logout/\", null, config);\n    } catch (error) {\n      callback(error.response.status);\n    }\n  }\n\n}\n\nexport default UserAPI;","map":{"version":3,"sources":["D:/Github/ShowApp/frontend/src/api/authapi.tsx"],"names":["axios","AsyncStorage","UserAPI","login","username","password","callback","config","headers","body","JSON","stringify","post","then","res","data","error","response","status","register","email","logout","value","getItem","e"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;AAEA,MAAMC,OAAN,CAAc;AACM,eAALC,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAqBC,QAArB,EAA+B;AAC/C,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAMA,UAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAf,CAAb;;AACA,QAAI;AACF,YAAML,KAAK,CACRY,IADG,CACE,wCADF,EAC4CH,IAD5C,EACkDF,MADlD,EAEHM,IAFG,CAEGC,GAAD,IAAS;AACbR,QAAAA,QAAQ,CAACQ,GAAG,CAACC,IAAL,CAAR;AACD,OAJG,CAAN;AAKD,KAND,CAME,OAAOC,KAAP,EAAc;AACdV,MAAAA,QAAQ,CAACU,KAAK,CAACC,QAAN,CAAeC,MAAhB,CAAR;AACD;AACF;;AAEoB,eAARC,QAAQ,CAACf,QAAD,EAAWgB,KAAX,EAAkBf,QAAlB,EAA4BC,QAA5B,EAAsC;AACzD,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAMA,UAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,QAAF;AAAYgB,MAAAA,KAAZ;AAAmBf,MAAAA;AAAnB,KAAf,CAAb;;AACA,QAAI;AACF,YAAML,KAAK,CACRY,IADG,CACE,0CADF,EAC8CH,IAD9C,EACoDF,MADpD,EAEHM,IAFG,CAEGC,GAAD,IAAS;AACbR,QAAAA,QAAQ,CAACQ,GAAG,CAACC,IAAL,CAAR;AACD,OAJG,CAAN;AAKD,KAND,CAME,OAAOC,KAAP,EAAc;AACdV,MAAAA,QAAQ,CAACU,KAAK,CAACC,QAAN,CAAeC,MAAhB,CAAR;AACD;AACF;;AAEkB,eAANG,MAAM,GAAG;AACpB,UAAMd,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAKA,QAAI;AACF,YAAMc,KAAK,GAAG,MAAMrB,YAAY,CAACsB,OAAb,CAAqB,QAArB,CAApB;;AACA,UAAID,KAAK,KAAK,IAAd,EAAoB;AAClBf,QAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,IAAkC,WAAWc,KAA7C;AACD;AACF,KALD,CAKE,OAAOE,CAAP,EAAU,CAAE;;AACd,QAAI;AACF,YAAMxB,KAAK,CAACY,IAAN,CAAW,wCAAX,EAAqD,IAArD,EAA2DL,MAA3D,CAAN;AACD,KAFD,CAEE,OAAOS,KAAP,EAAc;AACdV,MAAAA,QAAQ,CAACU,KAAK,CAACC,QAAN,CAAeC,MAAhB,CAAR;AACD;AACF;;AAxDW;;AA2Dd,eAAehB,OAAf","sourcesContent":["import axios from \"axios\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nclass UserAPI {\r\n  static async login(username, password, callback) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ username, password });\r\n    try {\r\n      await axios\r\n        .post(\"http://127.0.0.1:8000/api/auth/logins/\", body, config)\r\n        .then((res) => {\r\n          callback(res.data);\r\n        });\r\n    } catch (error) {\r\n      callback(error.response.status);\r\n    }\r\n  }\r\n\r\n  static async register(username, email, password, callback) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ username, email, password });\r\n    try {\r\n      await axios\r\n        .post(\"http://127.0.0.1:8000/api/auth/register/\", body, config)\r\n        .then((res) => {\r\n          callback(res.data);\r\n        });\r\n    } catch (error) {\r\n      callback(error.response.status);\r\n    }\r\n  }\r\n\r\n  static async logout() {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const value = await AsyncStorage.getItem(\"@token\");\r\n      if (value !== null) {\r\n        config.headers[\"Authorization\"] = \"Token \" + value;\r\n      }\r\n    } catch (e) {}\r\n    try {\r\n      await axios.post(\"http://127.0.0.1:8000/api/auth/logout/\", null, config);\r\n    } catch (error) {\r\n      callback(error.response.status);\r\n    }\r\n  }\r\n}\r\n\r\nexport default UserAPI;\r\n"]},"metadata":{},"sourceType":"module"}