{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\ShowApp\\\\frontend\\\\src\\\\components\\\\watchlists\\\\watchlist.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport WatchListAPI from \"../../api/watchlistapi\";\nimport { Tabs } from \"antd\";\nimport \"./watchlist.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TabPane\n} = Tabs;\n\nfunction WatchList() {\n  _s();\n\n  const [watchlist, setList] = useState([]);\n  useEffect(() => {\n    WatchListAPI.retrieveAll(function (response) {\n      setList(response.data);\n      console.log(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"watchlist-container\",\n    children: /*#__PURE__*/_jsxDEV(Tabs, {\n      defaultActiveKey: \"all\",\n      children: [/*#__PURE__*/_jsxDEV(TabPane, {\n        tab: \"All Movies and Shows\",\n        children: /*#__PURE__*/_jsxDEV(ShowAll, {\n          watchlist: watchlist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, \"All\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n        tab: \"Currently Watching\",\n        children: \"Content of Tab Pane 2\"\n      }, \"Currently Watching\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n        tab: \"Completed\",\n        children: \"Content of Tab Pane 3\"\n      }, \"Completed\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n        tab: \"On Hold\",\n        children: \"Content of Tab Pane 3\"\n      }, \"On Hold\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n        tab: \"Dropped\",\n        children: \"Content of Tab Pane 3\"\n      }, \"Dropped\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n        tab: \"Plan to Watch\",\n        children: \"Content of Tab Pane 3\"\n      }, \"Plan to Watch\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WatchList, \"ymzfFOquRo/LxMZ5LBqbytwT7GE=\");\n\n_c = WatchList;\n\nfunction ShowAll(props) {\n  const columns = [{\n    title: \"Title\",\n    dataIndex: \"Title\",\n    sorter: {\n      compare: (a, b) => a.title - b.title,\n      multiple: 4\n    }\n  }, {\n    title: \"Rating\",\n    dataIndex: \"rating\",\n    sorter: {\n      compare: (a, b) => a.rating - b.rating,\n      multiple: 3\n    }\n  }, {\n    title: \"Math Score\",\n    dataIndex: \"math\",\n    sorter: {\n      compare: (a, b) => a.math - b.math,\n      multiple: 2\n    }\n  }, {\n    title: \"English Score\",\n    dataIndex: \"english\",\n    sorter: {\n      compare: (a, b) => a.english - b.english,\n      multiple: 1\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Jenn\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = ShowAll;\nexport default WatchList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WatchList\");\n$RefreshReg$(_c2, \"ShowAll\");","map":{"version":3,"sources":["D:/Github/ShowApp/frontend/src/components/watchlists/watchlist.tsx"],"names":["React","useState","useEffect","WatchListAPI","Tabs","TabPane","WatchList","watchlist","setList","retrieveAll","response","data","console","log","ShowAll","props","columns","title","dataIndex","sorter","compare","a","b","multiple","rating","math","english"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAO,kBAAP;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAcD,IAApB;;AACA,SAASE,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,SAAD,EAAYC,OAAZ,IAAuBP,QAAQ,CAAC,EAAD,CAArC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,YAAY,CAACM,WAAb,CAAyB,UAAUC,QAAV,EAAoB;AAC3CF,MAAAA,OAAO,CAACE,QAAQ,CAACC,IAAV,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,gBAAgB,EAAC,KAAvB;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,GAAG,EAAC,sBAAb;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,SAAS,EAAEJ;AAApB;AAAA;AAAA;AAAA;AAAA;AADF,SAAwC,KAAxC;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,OAAD;AAAS,QAAA,GAAG,EAAC,oBAAb;AAAA;AAAA,SAAsC,oBAAtC;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,OAAD;AAAS,QAAA,GAAG,EAAC,WAAb;AAAA;AAAA,SAA6B,WAA7B;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE,QAAC,OAAD;AAAS,QAAA,GAAG,EAAC,SAAb;AAAA;AAAA,SAA2B,SAA3B;AAAA;AAAA;AAAA;AAAA,cAVF,eAaE,QAAC,OAAD;AAAS,QAAA,GAAG,EAAC,SAAb;AAAA;AAAA,SAA2B,SAA3B;AAAA;AAAA;AAAA;AAAA,cAbF,eAgBE,QAAC,OAAD;AAAS,QAAA,GAAG,EAAC,eAAb;AAAA;AAAA,SAAiC,eAAjC;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GAjCQD,S;;KAAAA,S;;AAmCT,SAASQ,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAMC,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,SAAS,EAAE,OAFb;AAGEC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACJ,KAAF,GAAUK,CAAC,CAACL,KADzB;AAENM,MAAAA,QAAQ,EAAE;AAFJ;AAHV,GADc,EASd;AACEN,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,SAAS,EAAE,QAFb;AAGEC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACG,MAAF,GAAWF,CAAC,CAACE,MAD1B;AAEND,MAAAA,QAAQ,EAAE;AAFJ;AAHV,GATc,EAiBd;AACEN,IAAAA,KAAK,EAAE,YADT;AAEEC,IAAAA,SAAS,EAAE,MAFb;AAGEC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACI,IAAF,GAASH,CAAC,CAACG,IADxB;AAENF,MAAAA,QAAQ,EAAE;AAFJ;AAHV,GAjBc,EAyBd;AACEN,IAAAA,KAAK,EAAE,eADT;AAEEC,IAAAA,SAAS,EAAE,SAFb;AAGEC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACK,OAAF,GAAYJ,CAAC,CAACI,OAD3B;AAENH,MAAAA,QAAQ,EAAE;AAFJ;AAHV,GAzBc,CAAhB;AAkCA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;MApCQT,O;AAsCT,eAAeR,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport WatchListAPI from \"../../api/watchlistapi\";\r\nimport { Tabs } from \"antd\";\r\nimport \"./watchlist.scss\";\r\n\r\nconst { TabPane } = Tabs;\r\nfunction WatchList() {\r\n  const [watchlist, setList] = useState([]);\r\n  useEffect(() => {\r\n    WatchListAPI.retrieveAll(function (response) {\r\n      setList(response.data);\r\n      console.log(response.data)\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"watchlist-container\">\r\n      <Tabs defaultActiveKey=\"all\">\r\n        <TabPane tab=\"All Movies and Shows\" key=\"All\">\r\n          <ShowAll watchlist={watchlist} />\r\n        </TabPane>\r\n        <TabPane tab=\"Currently Watching\" key=\"Currently Watching\">\r\n          Content of Tab Pane 2\r\n        </TabPane>\r\n        <TabPane tab=\"Completed\" key=\"Completed\">\r\n          Content of Tab Pane 3\r\n        </TabPane>\r\n        <TabPane tab=\"On Hold\" key=\"On Hold\">\r\n          Content of Tab Pane 3\r\n        </TabPane>\r\n        <TabPane tab=\"Dropped\" key=\"Dropped\">\r\n          Content of Tab Pane 3\r\n        </TabPane>\r\n        <TabPane tab=\"Plan to Watch\" key=\"Plan to Watch\">\r\n          Content of Tab Pane 3\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ShowAll(props) {\r\n  const columns = [\r\n    {\r\n      title: \"Title\",\r\n      dataIndex: \"Title\",\r\n      sorter: {\r\n        compare: (a, b) => a.title - b.title,\r\n        multiple: 4,\r\n      },\r\n    },\r\n    {\r\n      title: \"Rating\",\r\n      dataIndex: \"rating\",\r\n      sorter: {\r\n        compare: (a, b) => a.rating - b.rating,\r\n        multiple: 3,\r\n      },\r\n    },\r\n    {\r\n      title: \"Math Score\",\r\n      dataIndex: \"math\",\r\n      sorter: {\r\n        compare: (a, b) => a.math - b.math,\r\n        multiple: 2,\r\n      },\r\n    },\r\n    {\r\n      title: \"English Score\",\r\n      dataIndex: \"english\",\r\n      sorter: {\r\n        compare: (a, b) => a.english - b.english,\r\n        multiple: 1,\r\n      },\r\n    },\r\n  ];\r\n  return <div>Jenn</div>;\r\n}\r\n\r\nexport default WatchList;\r\n"]},"metadata":{},"sourceType":"module"}